(deftheme sanityinc-tomorrow-bright
  "A version of Chris Kempson's 'Tomorrow' theme (bright version)")

(custom-theme-set-variables
 'sanityinc-tomorrow-bright
 '(frame-background-mode 'dark)
 '(beacon-color "#d54e53")
 '(fci-rule-color "#424242")
 '(vc-annotate-color-map '((20 . "#d54e53") (40 . "#e78c45") (60 . "#e7c547") (80 . "#b9ca4a") (100 . "#70c0b1") (120 . "#7aa6da") (140 . "#c397d8") (160 . "#d54e53") (180 . "#e78c45") (200 . "#e7c547") (220 . "#b9ca4a") (240 . "#70c0b1") (260 . "#7aa6da") (280 . "#c397d8") (300 . "#d54e53") (320 . "#e78c45") (340 . "#e7c547") (360 . "#b9ca4a")))
 '(vc-annotate-very-old-color nil)
 '(vc-annotate-background nil)
 '(flycheck-color-mode-line-face-to-color 'mode-line-buffer-id)
 '(ansi-color-names-vector ["#000000" "#d54e53" "#b9ca4a" "#e7c547" "#7aa6da" "#c397d8" "#70c0b1" "#eaeaea"])
 '(window-divider-mode nil))

(custom-theme-set-faces
 'sanityinc-tomorrow-bright
 '(bold ((((class color) (min-colors 89)) (:weight bold))))
 '(bold-italic ((((class color) (min-colors 89)) (:slant italic :weight bold))))
 '(underline ((((class color) (min-colors 89)) (:underline t))))
 '(italic ((((class color) (min-colors 89)) (:slant italic))))
 '(font-lock-bracket-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(font-lock-builtin-face ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(font-lock-comment-delimiter-face ((((class color) (min-colors 89)) (:foreground "#969896" :slant italic))))
 '(font-lock-comment-face ((((class color) (min-colors 89)) (:foreground "#969896" :slant italic))))
 '(font-lock-constant-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(font-lock-doc-face ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(font-lock-doc-string-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(font-lock-escape-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(font-lock-function-call-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(font-lock-function-name-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(font-lock-keyword-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(font-lock-misc-punctuation-face ((((class color) (min-colors 89)) (:inherit font-lock-punctuation-face))))
 '(font-lock-negation-char-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(font-lock-number-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(font-lock-operator-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(font-lock-preprocessor-face ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(font-lock-property-name-face ((((class color) (min-colors 89)) (:inherit font-lock-variable-name-face))))
 '(font-lock-property-use-face ((((class color) (min-colors 89)) (:inherit font-lock-variable-name-face))))
 '(font-lock-punctuation-face ((((class color) (min-colors 89)) (:inherit default))))
 '(font-lock-regexp-face ((((class color) (min-colors 89)) (:inherit font-lock-string-face))))
 '(font-lock-regexp-grouping-backslash ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(font-lock-regexp-grouping-construct ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(font-lock-string-face ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(font-lock-type-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(font-lock-bracket-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(font-lock-delimiter-face ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(font-lock-type-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(font-lock-variable-name-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(font-lock-variable-use-face ((((class color) (min-colors 89)) (:inherit font-lock-variable-name-face))))
 '(font-lock-warning-face ((((class color) (min-colors 89)) (:weight bold :foreground "#d54e53"))))
 '(shadow ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(fill-column-indicator ((((class color) (min-colors 89)) (:foreground "#424242"))))
 '(success ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(error ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(warning ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(tooltip ((((class color) (min-colors 89)) (:foreground "#e7c547" :background "#000000" :inverse-video t))))
 '(cursor ((((class color) (min-colors 89)) (:background "#d54e53"))))
 '(fringe ((((class color) (min-colors 89)) (:background "#151515151515" :foreground "#969896"))))
 '(linum ((((class color) (min-colors 89)) (:background "#151515151515" :foreground "#969896" :italic nil :underline nil))))
 '(line-number ((((class color) (min-colors 89)) (:background "#151515151515" :foreground "#969896"))))
 '(line-number-current-line ((((class color) (min-colors 89)) (:inherit line-number :foreground "#eaeaea" :weight bold))))
 '(fill-column-indicator ((((class color) (min-colors 89)) (:foreground "#424242" :weight normal :slant normal :underline nil :overline nil :strike-through nil :box nil :inverse-video nil :stipple nil))))
 '(vertical-border ((((class color) (min-colors 89)) (:foreground "#424242"))))
 '(border ((((class color) (min-colors 89)) (:background "#424242" :foreground "#2a2a2a"))))
 '(highlight ((((class color) (min-colors 89)) (:inverse-video nil :background "#2a2a2a"))))
 '(mode-line ((((class color) (min-colors 89)) (:foreground "#eaeaea" :background "#424242" :weight normal :box (:line-width 1 :color "#424242")))))
 '(mode-line-buffer-id ((((class color) (min-colors 89)) (:foreground "#c397d8" :background unspecified))))
 '(mode-line-inactive ((((class color) (min-colors 89)) (:inherit mode-line :foreground "#969896" :background "#2a2a2a" :weight normal))))
 '(mode-line-emphasis ((((class color) (min-colors 89)) (:foreground "#eaeaea" :slant italic))))
 '(mode-line-highlight ((((class color) (min-colors 89)) (:foreground "#c397d8" :box nil :weight bold))))
 '(minibuffer-prompt ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(region ((((class color) (min-colors 89)) (:background "#424242" :inverse-video nil :extend t))))
 '(secondary-selection ((((class color) (min-colors 89)) (:background "#2a2a2a" :extend t))))
 '(header-line ((((class color) (min-colors 89)) (:inherit mode-line-inactive :foreground "#70c0b1" :background unspecified))))
 '(match ((((class color) (min-colors 89)) (:foreground "#7aa6da" :background "#000000" :inverse-video t))))
 '(isearch ((((class color) (min-colors 89)) (:foreground "#e7c547" :background "#000000" :inverse-video t))))
 '(lazy-highlight ((((class color) (min-colors 89)) (:foreground "#70c0b1" :background "#000000" :inverse-video t))))
 '(isearch-fail ((((class color) (min-colors 89)) (:background "#000000" :inherit font-lock-warning-face :inverse-video t))))
 '(link ((((class color) (min-colors 89)) (:foreground unspecified :underline t))))
 '(widget-button ((((class color) (min-colors 89)) (:underline t))))
 '(widget-field ((((class color) (min-colors 89)) (:background "#424242" :box (:line-width 1 :color "#eaeaea")))))
 '(ansi-color-black ((((class color) (min-colors 89)) (:foreground "#424242" :background "#424242"))))
 '(ansi-color-red ((((class color) (min-colors 89)) (:foreground "#d54e53" :background "#d54e53"))))
 '(ansi-color-green ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :background "#b9ca4a"))))
 '(ansi-color-yellow ((((class color) (min-colors 89)) (:foreground "#e7c547" :background "#e7c547"))))
 '(ansi-color-blue ((((class color) (min-colors 89)) (:foreground "#7aa6da" :background "#7aa6da"))))
 '(ansi-color-magenta ((((class color) (min-colors 89)) (:foreground "#c397d8" :background "#c397d8"))))
 '(ansi-color-cyan ((((class color) (min-colors 89)) (:foreground "#70c0b1" :background "#70c0b1"))))
 '(ansi-color-white ((((class color) (min-colors 89)) (:foreground "#969896" :background "#969896"))))
 '(ansi-color-bright-black ((((class color) (min-colors 89)) (:inherit ansi-color-black :weight bold))))
 '(ansi-color-bright-red ((((class color) (min-colors 89)) (:inherit ansi-color-red :weight bold))))
 '(ansi-color-bright-green ((((class color) (min-colors 89)) (:inherit ansi-color-green :weight bold))))
 '(ansi-color-bright-yellow ((((class color) (min-colors 89)) (:inherit ansi-color-yellow :weight bold))))
 '(ansi-color-bright-blue ((((class color) (min-colors 89)) (:inherit ansi-color-blue :weight bold))))
 '(ansi-color-bright-magenta ((((class color) (min-colors 89)) (:inherit ansi-color-magenta :weight bold))))
 '(ansi-color-bright-cyan ((((class color) (min-colors 89)) (:inherit ansi-color-cyan :weight bold))))
 '(ansi-color-bright-white ((((class color) (min-colors 89)) (:inherit ansi-color-white :weight bold))))
 '(term ((((class color) (min-colors 89)) (:foreground unspecified :background unspecified :inherit default))))
 '(term-color-black ((((class color) (min-colors 89)) (:foreground "#424242" :background "#424242"))))
 '(term-color-red ((((class color) (min-colors 89)) (:foreground "#d54e53" :background "#d54e53"))))
 '(term-color-green ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :background "#b9ca4a"))))
 '(term-color-yellow ((((class color) (min-colors 89)) (:foreground "#e7c547" :background "#e7c547"))))
 '(term-color-blue ((((class color) (min-colors 89)) (:foreground "#7aa6da" :background "#7aa6da"))))
 '(term-color-magenta ((((class color) (min-colors 89)) (:foreground "#c397d8" :background "#c397d8"))))
 '(term-color-cyan ((((class color) (min-colors 89)) (:foreground "#70c0b1" :background "#70c0b1"))))
 '(term-color-white ((((class color) (min-colors 89)) (:foreground "#969896" :background "#969896"))))
 '(antlr-keyword ((((class color) (min-colors 89)) (:inherit font-lock-keyword-face))))
 '(antlr-syntax ((((class color) (min-colors 89)) (:inherit font-lock-constant-face))))
 '(antlr-ruledef ((((class color) (min-colors 89)) (:inherit font-lock-function-name-face))))
 '(antlr-ruleref ((((class color) (min-colors 89)) (:inherit font-lock-type-face))))
 '(antlr-tokendef ((((class color) (min-colors 89)) (:inherit font-lock-function-name-face))))
 '(antlr-tokenref ((((class color) (min-colors 89)) (:inherit font-lock-type-face))))
 '(antlr-literal ((((class color) (min-colors 89)) (:inherit font-lock-constant-face))))
 '(diary ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(holiday ((((class color) (min-colors 89)) (:foreground "#000000" :background "#e78c45"))))
 '(compilation-column-number ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(compilation-line-number ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(compilation-message-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(compilation-mode-line-exit ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(compilation-mode-line-fail ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(compilation-mode-line-run ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(completions-annotations ((((class color) (min-colors 89)) (:foreground "#969896" :slant italic))))
 '(completions-common-part ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(completions-first-difference ((((class color) (min-colors 89)) (:foreground "#e78c45" :weight bold))))
 '(custom-variable-tag ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(custom-group-tag ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(custom-state ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(diff-added ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :extend t))))
 '(diff-changed ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(diff-removed ((((class color) (min-colors 89)) (:foreground "#e78c45" :extend t))))
 '(diff-header ((((class color) (min-colors 89)) (:foreground "#70c0b1" :background unspecified :extend t))))
 '(diff-file-header ((((class color) (min-colors 89)) (:foreground "#7aa6da" :background unspecified :extend t))))
 '(diff-hunk-header ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(diff-indicator-added ((((class color) (min-colors 89)) (:inherit diff-added))))
 '(diff-indicator-changed ((((class color) (min-colors 89)) (:inherit diff-changed))))
 '(diff-indicator-removed ((((class color) (min-colors 89)) (:inherit diff-removed))))
 '(diff-refine-added ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(diff-refine-changed ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(diff-refine-removed ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(ediff-current-diff-A ((((class color) (min-colors 89)) (:foreground "#969896" :background "#2a2a2a" :extend t))))
 '(ediff-current-diff-Ancestor ((((class color) (min-colors 89)) (:foreground "#70c0b1" :background "#2a2a2a"))))
 '(ediff-current-diff-B ((((class color) (min-colors 89)) (:foreground "#969896" :background "#2a2a2a" :extend t))))
 '(ediff-current-diff-C ((((class color) (min-colors 89)) (:foreground "#969896" :background "#2a2a2a" :extend t))))
 '(ediff-even-diff-A ((((class color) (min-colors 89)) (:foreground "#7aa6da" :background "#424242" :extend t))))
 '(ediff-even-diff-Ancestor ((((class color) (min-colors 89)) (:foreground "#c397d8" :background "#2a2a2a"))))
 '(ediff-even-diff-B ((((class color) (min-colors 89)) (:foreground "#7aa6da" :background "#424242" :extend t))))
 '(ediff-even-diff-C ((((class color) (min-colors 89)) (:foreground "#7aa6da" :background "#424242" :extend t))))
 '(ediff-fine-diff-A ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :background "#424242"))))
 '(ediff-fine-diff-Ancestor ((((class color) (min-colors 89)) (:foreground "#e7c547" :background "#2a2a2a"))))
 '(ediff-fine-diff-B ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :background "#424242"))))
 '(ediff-fine-diff-C ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :background "#424242"))))
 '(ediff-odd-diff-A ((((class color) (min-colors 89)) (:foreground "#e78c45" :background "#424242" :extend t))))
 '(ediff-odd-diff-Ancestor ((((class color) (min-colors 89)) (:foreground "#d54e53" :background "#2a2a2a"))))
 '(ediff-odd-diff-B ((((class color) (min-colors 89)) (:foreground "#e78c45" :background "#424242" :extend t))))
 '(ediff-odd-diff-C ((((class color) (min-colors 89)) (:foreground "#e78c45" :background "#424242" :extend t))))
 '(eldoc-highlight-function-argument ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :weight bold))))
 '(erc-direct-msg-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(erc-error-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(erc-header-face ((((class color) (min-colors 89)) (:foreground "#eaeaea" :background "#2a2a2a"))))
 '(erc-input-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(erc-keyword-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(erc-current-nick-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(erc-my-nick-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(erc-nick-default-face ((((class color) (min-colors 89)) (:weight normal :foreground "#c397d8"))))
 '(erc-nick-msg-face ((((class color) (min-colors 89)) (:weight normal :foreground "#e7c547"))))
 '(erc-notice-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(erc-pal-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(erc-prompt-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(erc-timestamp-face ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(erc-keyword-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(ert-test-result-unexpected ((((class color) (min-colors 89)) (:inherit error))))
 '(ert-test-result-expected ((((class color) (min-colors 89)) (:inherit success))))
 '(eshell-prompt ((((class color) (min-colors 89)) (:foreground "#e7c547" :weight bold))))
 '(eshell-ls-archive ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(eshell-ls-backup ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(eshell-ls-clutter ((((class color) (min-colors 89)) (:foreground "#e78c45" :weight bold))))
 '(eshell-ls-directory ((((class color) (min-colors 89)) :foreground "#7aa6da" :weight bold)))
 '(eshell-ls-executable ((((class color) (min-colors 89)) (:foreground "#e7c547" :weight bold))))
 '(eshell-ls-missing ((((class color) (min-colors 89)) (:foreground "#d54e53" :weight bold))))
 '(eshell-ls-product ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(eshell-ls-readonly ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(eshell-ls-special ((((class color) (min-colors 89)) (:foreground "#c397d8" :weight bold))))
 '(eshell-ls-symlink ((((class color) (min-colors 89)) (:foreground "#70c0b1" :weight bold))))
 '(eshell-ls-unreadable ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(flycheck-error ((((class color) (min-colors 89)) (:underline (:style wave :color "#d54e53")))))
 '(flycheck-info ((((class color) (min-colors 89)) (:underline (:style wave :color "#70c0b1")))))
 '(flycheck-warning ((((class color) (min-colors 89)) (:underline (:style wave :color "#e78c45")))))
 '(flycheck-fringe-error ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(flycheck-fringe-info ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(flycheck-fringe-warning ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(flycheck-color-mode-line-error-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(flycheck-color-mode-line-warning-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(flycheck-color-mode-line-info-face ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(flycheck-color-mode-line-running-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(flycheck-color-mode-line-success-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(flymake-error ((((class color) (min-colors 89)) (:underline (:style wave :color "#d54e53")))))
 '(flymake-note ((((class color) (min-colors 89)) (:underline (:style wave :color "#70c0b1")))))
 '(flymake-warning ((((class color) (min-colors 89)) (:underline (:style wave :color "#e78c45")))))
 '(flyspell-incorrect ((((class color) (min-colors 89)) (:underline (:style wave :color "#d54e53")))))
 '(gnus-button ((((class color) (min-colors 89)) (:inherit link :foreground unspecified))))
 '(gnus-emphasis-highlight-words ((((class color) (min-colors 89)) (:foreground "#e7c547" :background "#2a2a2a"))))
 '(gnus-header-content ((((class color) (min-colors 89)) (:inherit message-header-other))))
 '(gnus-header-from ((((class color) (min-colors 89)) (:inherit message-header-other-face :weight bold :foreground "#e78c45"))))
 '(gnus-header-name ((((class color) (min-colors 89)) (:inherit message-header-name))))
 '(gnus-header-newsgroups ((((class color) (min-colors 89)) (:foreground "#e7c547" :slant italic))))
 '(gnus-header-subject ((((class color) (min-colors 89)) (:inherit message-header-subject))))
 '(gnus-x-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#eaeaea"))))
 '(gnus-signature ((((class color) (min-colors 89)) (:inherit font-lock-comment-face))))
 '(mm-uu-extract ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :background "#2a2a2a"))))
 '(gnus-cite-1 ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(gnus-cite-2 ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(gnus-cite-3 ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(gnus-cite-4 ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(gnus-cite-5 ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(gnus-cite-6 ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(gnus-cite-7 ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(gnus-cite-8 ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(gnus-cite-9 ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(gnus-cite-10 ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(gnus-cite-11 ((((class color) (min-colors 89)) (:foreground "#424242"))))
 '(gnus-group-mail-1 ((((class color) (min-colors 89)) (:foreground "#7aa6da" :weight normal))))
 '(gnus-group-mail-1-empty ((((class color) (min-colors 89)) (:inherit gnus-group-mail-1 :foreground "#969896"))))
 '(gnus-group-mail-2 ((((class color) (min-colors 89)) (:foreground "#c397d8" :weight normal))))
 '(gnus-group-mail-2-empty ((((class color) (min-colors 89)) (:inherit gnus-group-mail-2 :foreground "#969896"))))
 '(gnus-group-mail-3 ((((class color) (min-colors 89)) (:foreground "#70c0b1" :weight normal))))
 '(gnus-group-mail-3-empty ((((class color) (min-colors 89)) (:inherit gnus-group-mail-3 :foreground "#969896"))))
 '(gnus-group-mail-4 ((((class color) (min-colors 89)) (:foreground "#e7c547" :weight normal))))
 '(gnus-group-mail-4-empty ((((class color) (min-colors 89)) (:inherit gnus-group-mail-4 :foreground "#969896"))))
 '(gnus-group-mail-5 ((((class color) (min-colors 89)) (:foreground "#e78c45" :weight normal))))
 '(gnus-group-mail-5-empty ((((class color) (min-colors 89)) (:inherit gnus-group-mail-5 :foreground "#969896"))))
 '(gnus-group-mail-6 ((((class color) (min-colors 89)) (:foreground "#7aa6da" :weight normal))))
 '(gnus-group-mail-6-empty ((((class color) (min-colors 89)) (:inherit gnus-group-mail-6 :foreground "#969896"))))
 '(gnus-group-mail-low ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(gnus-group-mail-low-empty ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(gnus-group-news-1 ((((class color) (min-colors 89)) (:foreground "#7aa6da" :weight normal))))
 '(gnus-group-news-1-empty ((((class color) (min-colors 89)) (:inherit gnus-group-news-1 :foreground "#969896"))))
 '(gnus-group-news-2 ((((class color) (min-colors 89)) (:foreground "#c397d8" :weight normal))))
 '(gnus-group-news-2-empty ((((class color) (min-colors 89)) (:inherit gnus-group-news-2 :foreground "#969896"))))
 '(gnus-group-news-3 ((((class color) (min-colors 89)) (:foreground "#70c0b1" :weight normal))))
 '(gnus-group-news-3-empty ((((class color) (min-colors 89)) (:inherit gnus-group-news-3 :foreground "#969896"))))
 '(gnus-group-news-4 ((((class color) (min-colors 89)) (:foreground "#e7c547" :weight normal))))
 '(gnus-group-news-4-empty ((((class color) (min-colors 89)) (:inherit gnus-group-news-4 :foreground "#969896"))))
 '(gnus-group-news-5 ((((class color) (min-colors 89)) (:foreground "#e78c45" :weight normal))))
 '(gnus-group-news-5-empty ((((class color) (min-colors 89)) (:inherit gnus-group-news-5 :foreground "#969896"))))
 '(gnus-group-news-6 ((((class color) (min-colors 89)) (:foreground "#7aa6da" :weight normal))))
 '(gnus-group-news-6-empty ((((class color) (min-colors 89)) (:inherit gnus-group-news-6 :foreground "#969896"))))
 '(gnus-server-agent ((((class color) (min-colors 89)) (:foreground "#70c0b1" :weight bold))))
 '(gnus-server-closed ((((class color) (min-colors 89)) (:foreground "#969896" :slant italic))))
 '(gnus-server-cloud ((((class color) (min-colors 89)) (:foreground "#e78c45" :weight bold))))
 '(gnus-server-denied ((((class color) (min-colors 89)) (:foreground "#d54e53" :weight bold))))
 '(gnus-server-offline ((((class color) (min-colors 89)) (:foreground "#7aa6da" :weight bold))))
 '(gnus-server-opened ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :weight bold))))
 '(gnus-splash ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(gnus-summary-cancelled ((((class color) (min-colors 89)) (:foreground "#d54e53" :background unspecified :weight normal))))
 '(gnus-summary-high-ancient ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :weight normal))))
 '(gnus-summary-high-read ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :weight normal))))
 '(gnus-summary-high-ticked ((((class color) (min-colors 89)) (:foreground "#e78c45" :weight normal))))
 '(gnus-summary-high-undownloaded ((((class color) (min-colors 89)) (:foreground "#eaeaea" :weight bold))))
 '(gnus-summary-high-unread ((((class color) (min-colors 89)) (:foreground "#e7c547" :weight normal))))
 '(gnus-summary-low-ancient ((((class color) (min-colors 89)) (:foreground "#969896" :weight normal))))
 '(gnus-summary-low-read ((((class color) (min-colors 89)) (:foreground "#969896" :weight normal))))
 '(gnus-summary-low-ticked ((((class color) (min-colors 89)) (:foreground "#969896" :slant italic))))
 '(gnus-summary-low-undownloaded ((((class color) (min-colors 89)) (:foreground "#eaeaea" :slant italic))))
 '(gnus-summary-low-unread ((((class color) (min-colors 89)) (:foreground "#969896" :weight normal))))
 '(gnus-summary-normal-ancient ((((class color) (min-colors 89)) (:foreground "#70c0b1" :weight normal))))
 '(gnus-summary-normal-read ((((class color) (min-colors 89)) (:foreground "#eaeaea" :weight normal))))
 '(gnus-summary-normal-ticked ((((class color) (min-colors 89)) (:foreground "#e78c45" :weight normal))))
 '(gnus-summary-normal-undownloaded ((((class color) (min-colors 89)) (:foreground "#eaeaea"))))
 '(gnus-summary-normal-unread ((((class color) (min-colors 89)) (:foreground "#7aa6da" :weight normal))))
 '(grep-context-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(grep-error-face ((((class color) (min-colors 89)) (:foreground "#d54e53" :weight bold :underline t))))
 '(grep-hit-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(grep-match-face ((((class color) (min-colors 89)) (:foreground unspecified :background unspecified :inherit match))))
 '(hi-black-hb ((((class color) (min-colors 89)) (:weight bold))))
 '(hi-blue ((((class color) (min-colors 89)) (:foreground "#000000" :background "#7aa6da"))))
 '(hi-blue-b ((((class color) (min-colors 89)) (:foreground "#7aa6da" :weight bold))))
 '(hi-green ((((class color) (min-colors 89)) (:foreground "#000000" :background "#b9ca4a"))))
 '(hi-green-b ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :weight bold))))
 '(hi-pink ((((class color) (min-colors 89)) (:foreground "#000000" :background "#70c0b1"))))
 '(hi-red-b ((((class color) (min-colors 89)) (:foreground "#d54e53" :weight bold))))
 '(hi-yellow ((((class color) (min-colors 89)) (:foreground "#000000" :background "#e7c547"))))
 '(icomplete-first-match ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :weight bold))))
 '(ido-subdir ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(ido-first-match ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(ido-only-match ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(ido-indicator ((((class color) (min-colors 89)) (:foreground "#d54e53" :background "#000000"))))
 '(ido-virtual ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(Info-quoted ((((class color) (min-colors 89)) (:inherit font-lock-constant-face))))
 '(info-index-match ((((class color) (min-colors 89)) (:inherit isearch))))
 '(info-menu-header ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :weight bold :height 1.4))))
 '(info-menu-star ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(info-node ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :weight bold :slant italic))))
 '(info-title-1 ((((class color) (min-colors 89)) (:weight bold :height 1.4))))
 '(info-title-2 ((((class color) (min-colors 89)) (:weight bold :height 1.2))))
 '(info-title-3 ((((class color) (min-colors 89)) (:weight bold :foreground "#e78c45"))))
 '(info-title-4 ((((class color) (min-colors 89)) (:weight bold :foreground "#c397d8"))))
 '(info-xref-visited ((((class color) (min-colors 89)) (:foreground "#969896" :underline t))))
 '(j-verb-face ((((class color) (min-colors 89)) (:inherit font-lock-constant-face))))
 '(j-adverb-face ((((class color) (min-colors 89)) (:inherit font-lock-function-name-face))))
 '(j-conjunction-face ((((class color) (min-colors 89)) (:inherit font-lock-keyword-face))))
 '(j-other-face ((((class color) (min-colors 89)) (:inherit font-lock-preprocessor-face))))
 '(kaocha-runner-error-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(kaocha-runner-success-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(kaocha-runner-warning-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(message-header-other ((((class color) (min-colors 89)) (:foreground unspecified :background unspecified :weight normal))))
 '(message-header-subject ((((class color) (min-colors 89)) (:inherit message-header-other :weight bold :foreground "#e7c547"))))
 '(message-header-to ((((class color) (min-colors 89)) (:inherit message-header-other :weight bold :foreground "#e78c45"))))
 '(message-header-cc ((((class color) (min-colors 89)) (:inherit message-header-to :foreground unspecified))))
 '(message-header-name ((((class color) (min-colors 89)) (:foreground "#7aa6da" :background unspecified))))
 '(message-header-newsgroups ((((class color) (min-colors 89)) (:foreground "#70c0b1" :background unspecified :slant normal))))
 '(message-separator ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(nim-font-lock-export-face ((((class color) (min-colors 89)) (:inherit font-lock-function-name-face))))
 '(nim-font-lock-number-face ((((class color) (min-colors 89)) (:inherit default))))
 '(nim-font-lock-pragma-face ((((class color) (min-colors 89)) (:inherit font-lock-preprocessor-face))))
 '(nim-non-overloadable-face ((((class color) (min-colors 89)) (:inherit font-lock-builtin-face))))
 '(nxml-name-face ((((class color) (min-colors 89)) (:foreground unspecified :inherit font-lock-constant-face))))
 '(nxml-attribute-local-name-face ((((class color) (min-colors 89)) (:foreground unspecified :inherit font-lock-variable-name-face))))
 '(nxml-ref-face ((((class color) (min-colors 89)) (:foreground unspecified :inherit font-lock-preprocessor-face))))
 '(nxml-delimiter-face ((((class color) (min-colors 89)) (:foreground unspecified :inherit font-lock-keyword-face))))
 '(nxml-delimited-data-face ((((class color) (min-colors 89)) (:foreground unspecified :inherit font-lock-string-face))))
 '(rng-error-face ((((class color) (min-colors 89)) (:underline "#d54e53"))))
 '(orderless-match-face-0 ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(orderless-match-face-1 ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(orderless-match-face-2 ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(orderless-match-face-3 ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(org-agenda-structure ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(org-agenda-current-time ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(org-agenda-date ((((class color) (min-colors 89)) (:foreground "#7aa6da" :underline nil))))
 '(org-agenda-done ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(org-agenda-dimmed-todo-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(org-block ((((class color) (min-colors 89)) (:background "#151515151515"))))
 '(org-block-begin-line ((((class color) (min-colors 89)) (:background "#000000" :foreground "#969896" :slant italic))))
 '(org-block-end-line ((((class color) (min-colors 89)) (:background "#000000" :foreground "#969896" :slant italic))))
 '(org-code ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(org-column ((((class color) (min-colors 89)) (:background "#424242"))))
 '(org-column-title ((((class color) (min-colors 89)) (:inherit org-column :weight bold :underline t))))
 '(org-date ((((class color) (min-colors 89)) (:foreground "#7aa6da" :underline t))))
 '(org-date-selected ((((class color) (min-colors 89)) (:foreground "#70c0b1" :inverse-video t))))
 '(org-document-info ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(org-document-info-keyword ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(org-document-title ((((class color) (min-colors 89)) (:weight bold :foreground "#e78c45" :height 1.4))))
 '(org-done ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(org-ellipsis ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(org-footnote ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(org-formula ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(org-hide ((((class color) (min-colors 89)) (:foreground "#000000" :background "#000000"))))
 '(org-habit-alert-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#e7c547"))))
 '(org-habit-alert-future-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#e78c45"))))
 '(org-habit-clear-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#969896"))))
 '(org-habit-clear-future-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#c397d8"))))
 '(org-habit-overdue-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#7aa6da"))))
 '(org-habit-overdue-future-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#d54e53"))))
 '(org-habit-ready-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#70c0b1"))))
 '(org-habit-ready-future-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#b9ca4a"))))
 '(org-headline-done ((((class color) (min-colors 89)) (:foreground unspecified :strike-through t))))
 '(org-headline-todo ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(org-link ((((class color) (min-colors 89)) (:foreground "#7aa6da" :underline t))))
 '(org-mode-line-clock-overrun ((((class color) (min-colors 89)) (:inherit mode-line :background "#d54e53"))))
 '(org-scheduled ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(org-scheduled-previously ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(org-scheduled-today ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(org-special-keyword ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(org-table ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(org-time-grid ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(org-todo ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(org-upcoming-deadline ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(org-warning ((((class color) (min-colors 89)) (:weight bold :foreground "#d54e53"))))
 '(outline-1 ((((class color) (min-colors 89)) (:inherit nil :foreground "#7aa6da"))))
 '(outline-2 ((((class color) (min-colors 89)) (:inherit nil :foreground "#c397d8"))))
 '(outline-3 ((((class color) (min-colors 89)) (:inherit nil :foreground "#70c0b1"))))
 '(outline-4 ((((class color) (min-colors 89)) (:inherit nil :foreground "#e7c547"))))
 '(outline-5 ((((class color) (min-colors 89)) (:inherit nil :foreground "#e78c45"))))
 '(outline-6 ((((class color) (min-colors 89)) (:inherit nil :foreground "#7aa6da"))))
 '(outline-7 ((((class color) (min-colors 89)) (:inherit nil :foreground "#c397d8"))))
 '(outline-8 ((((class color) (min-colors 89)) (:inherit nil :foreground "#70c0b1"))))
 '(outline-9 ((((class color) (min-colors 89)) (:inherit nil :foreground "#e7c547"))))
 '(outline-minor-0 ((((class color) (min-colors 89)) (:weight bold :background "#151515151515"))))
 '(outline-minor-1 ((((class color) (min-colors 89)) (:inherit (outline-minor-0 outline-1)))))
 '(show-paren-match ((((class color) (min-colors 89)) (:background "#c397d8" :foreground "#000000"))))
 '(show-paren-mismatch ((((class color) (min-colors 89)) (:background "#d54e53" :foreground "#000000"))))
 '(rcirc-bright-nick ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(rcirc-dim-nick ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(rcirc-keyword ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(rcirc-my-nick ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(rcirc-nick-in-message ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(rcirc-nick-in-message-full-line ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(rcirc-other-nick ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(rcirc-prompt ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(rcirc-server ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(rcirc-timestamp ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(reb-match-0 ((((class color) (min-colors 89)) (:foreground "#000000" :background "#70c0b1"))))
 '(reb-match-1 ((((class color) (min-colors 89)) (:foreground "#000000" :background "#e7c547"))))
 '(reb-match-2 ((((class color) (min-colors 89)) (:foreground "#000000" :background "#e78c45"))))
 '(reb-match-3 ((((class color) (min-colors 89)) (:foreground "#000000" :background "#7aa6da"))))
 '(ruler-mode-column-number ((((class color) (min-colors 89)) (:foreground "#eaeaea" :background "#2a2a2a"))))
 '(ruler-mode-comment-column ((((class color) (min-colors 89)) (:foreground "#969896" :background "#424242"))))
 '(ruler-mode-current-column ((((class color) (min-colors 89)) (:foreground "#e7c547" :background "#424242" :weight bold))))
 '(ruler-mode-default ((((class color) (min-colors 89)) (:foreground "#969896" :background "#2a2a2a"))))
 '(ruler-mode-fill-column ((((class color) (min-colors 89)) (:foreground "#d54e53" :background "#424242"))))
 '(ruler-mode-fringes ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :background "#424242"))))
 '(ruler-mode-goal-column ((((class color) (min-colors 89)) (:foreground "#d54e53" :background "#424242"))))
 '(ruler-mode-margins ((((class color) (min-colors 89)) (:foreground "#e78c45" :background "#424242"))))
 '(ruler-mode-pad ((((class color) (min-colors 89)) (:foreground "#000000" :background "#969896"))))
 '(ruler-mode-tab-stop ((((class color) (min-colors 89)) (:foreground "#7aa6da" :background "#424242"))))
 '(sh-heredoc ((((class color) (min-colors 89)) (:foreground unspecified :inherit font-lock-string-face :weight normal))))
 '(sh-quoted-exec ((((class color) (min-colors 89)) (:foreground unspecified :inherit font-lock-preprocessor-face))))
 '(speedbar-button-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(speedbar-directory-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(speedbar-file-face ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(speedbar-highlight-face ((((class color) (min-colors 89)) (:inherit highlight))))
 '(speedbar-selected-face ((((class color) (min-colors 89)) (:foreground "#d54e53" :underline t))))
 '(speedbar-separator-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#7aa6da" :overline "#000000"))))
 '(speedbar-tag-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(vhdl-speedbar-architecture-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(vhdl-speedbar-architecture-selected-face ((((class color) (min-colors 89)) (:foreground "#7aa6da" :underline t))))
 '(vhdl-speedbar-configuration-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(vhdl-speedbar-configuration-selected-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :underline t))))
 '(vhdl-speedbar-entity-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(vhdl-speedbar-entity-selected-face ((((class color) (min-colors 89)) (:foreground "#e78c45" :underline t))))
 '(vhdl-speedbar-instantiation-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(vhdl-speedbar-instantiation-selected-face ((((class color) (min-colors 89)) (:foreground "#e7c547" :underline t))))
 '(vhdl-speedbar-library-face ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(vhdl-speedbar-package-face ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(vhdl-speedbar-package-selected-face ((((class color) (min-colors 89)) (:foreground "#70c0b1" :underline t))))
 '(vhdl-speedbar-subprogram-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(tab-bar ((((class color) (min-colors 89)) (:height 1.2 :foreground "#969896" :background "#2a2a2a"))))
 '(tab-bar-tab ((((class color) (min-colors 89)) (:background "#424242" :foreground "#c397d8" :inverse-video nil :box (:line-width 1 :style released-button)))))
 '(tab-bar-tab-inactive ((((class color) (min-colors 89)) (:inherit tab-bar-tab :background "#969896" :foreground "#2a2a2a" :inverse-video t))))
 '(tab-line ((((class color) (min-colors 89)) (:foreground "#969896" :background "#2a2a2a"))))
 '(tab-line-close-highlight ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(tab-line-tab ((((class color) (min-colors 89)) (:background "#424242" :foreground "#c397d8" :inverse-video nil :box (:line-width 1 :style released-button)))))
 '(tab-line-tab-inactive ((((class color) (min-colors 89)) (:inherit tab-line-tab :background "#969896" :foreground "#2a2a2a" :inverse-video t))))
 '(which-func ((((class color) (min-colors 89)) (:foreground "#7aa6da" :background unspecified :weight bold))))
 '(whitespace-big-indent ((((class color) (min-colors 89)) (:background "#d54e53" :foreground "#424242"))))
 '(whitespace-empty ((((class color) (min-colors 89)) (:background "#e7c547" :foreground "#e78c45"))))
 '(whitespace-hspace ((((class color) (min-colors 89)) (:background "#424242" :foreground "#969896"))))
 '(whitespace-indentation ((((class color) (min-colors 89)) (:background "#424242" :foreground "#969896"))))
 '(whitespace-line ((((class color) (min-colors 89)) (:background "#424242" :foreground "#e78c45"))))
 '(whitespace-newline ((((class color) (min-colors 89)) (:background "#424242" :foreground "#969896"))))
 '(whitespace-space ((((class color) (min-colors 89)) (:background "#424242" :foreground "#969896"))))
 '(whitespace-space-after-tab ((((class color) (min-colors 89)) (:background "#424242" :foreground "#e7c547"))))
 '(whitespace-space-before-tab ((((class color) (min-colors 89)) (:background "#424242" :foreground "#e78c45"))))
 '(whitespace-tab ((((class color) (min-colors 89)) (:background "#424242" :foreground "#969896"))))
 '(whitespace-trailing ((((class color) (min-colors 89)) (:background "#e78c45" :foreground "#424242"))))
 '(trailing-whitespace ((((class color) (min-colors 89)) (:inherit whitespace-trailing))))
 '(window-divider ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(window-divider-first-pixel ((((class color) (min-colors 89)) (:foreground "#424242"))))
 '(window-divider-last-pixel ((((class color) (min-colors 89)) (:foreground "#424242"))))
 '(aw-background-face ((((class color) (min-colors 89)) (:foreground "#424242"))))
 '(aw-leading-char-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(anzu-mode-line ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(anzu-mode-line-no-match ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(anzu-replace-highlight ((((class color) (min-colors 89)) (:inherit lazy-highlight))))
 '(anzu-replace-to ((((class color) (min-colors 89)) (:inherit isearch))))
 '(anzu-match-1 ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(anzu-match-2 ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(anzu-match-3 ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(font-latex-bold-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :weight bold))))
 '(font-latex-doctex-documentation-face ((((class color) (min-colors 89)) (:inherit highlight))))
 '(font-latex-italic-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :slant italic))))
 '(font-latex-math-face ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(font-latex-script-char-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(font-latex-sectioning-0-face ((((class color) (min-colors 89)) (:foreground "#e7c547" :weight bold :height 1.2))))
 '(font-latex-sectioning-1-face ((((class color) (min-colors 89)) (:foreground "#e7c547" :weight bold :height 1.2))))
 '(font-latex-sectioning-2-face ((((class color) (min-colors 89)) (:foreground "#e7c547" :weight bold :height 1.2))))
 '(font-latex-sectioning-3-face ((((class color) (min-colors 89)) (:foreground "#e7c547" :weight bold :height 1.2))))
 '(font-latex-sectioning-4-face ((((class color) (min-colors 89)) (:foreground "#e7c547" :weight bold :height 1.2))))
 '(font-latex-sectioning-5-face ((((class color) (min-colors 89)) (:foreground "#e7c547" :weight bold))))
 '(font-latex-sedate-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(font-latex-slide-title-face ((((class color) (min-colors 89)) (:foreground "#7aa6da" :weight bold :height 1.2))))
 '(font-latex-string-face ((((class color) (min-colors 89)) (:inherit font-lock-string-face))))
 '(font-latex-verbatim-face ((((class color) (min-colors 89)) (:inherit font-lock-string-face))))
 '(font-latex-warning-face ((((class color) (min-colors 89)) (:inherit warning))))
 '(TeX-fold-folded-face ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(TeX-fold-unfolded-face ((((class color) (min-colors 89)) (:inherit highlight))))
 '(avy-background-face ((((class color) (min-colors 89)) (:foreground "#424242"))))
 '(avy-lead-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#e7c547"))))
 '(avy-lead-face-0 ((((class color) (min-colors 89)) (:foreground "#000000" :background "#7aa6da"))))
 '(avy-lead-face-1 ((((class color) (min-colors 89)) (:foreground "#000000" :background "#70c0b1"))))
 '(avy-lead-face-2 ((((class color) (min-colors 89)) (:foreground "#000000" :background "#e78c45"))))
 '(bm-face ((((class color) (min-colors 89)) (:background "#424242" :foreground "#eaeaea" :extend t))))
 '(bm-persistent-face ((((class color) (min-colors 89)) (:background "#7aa6da" :foreground "#000000" :extend t))))
 '(bookmark-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#e7c547"))))
 '(bmkp-*-mark ((((class color) (min-colors 89)) (:foreground "#000000" :background "#e7c547"))))
 '(bmkp->-mark ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(bmkp-D-mark ((((class color) (min-colors 89)) (:foreground "#000000" :background "#d54e53"))))
 '(bmkp-X-mark ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(bmkp-a-mark ((((class color) (min-colors 89)) (:background "#d54e53"))))
 '(bmkp-bad-bookmark ((((class color) (min-colors 89)) (:foreground "#000000" :background "#e7c547"))))
 '(bmkp-bookmark-file ((((class color) (min-colors 89)) (:foreground "#c397d8" :background "#424242"))))
 '(bmkp-bookmark-list ((((class color) (min-colors 89)) (:background "#424242"))))
 '(bmkp-buffer ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(bmkp-desktop ((((class color) (min-colors 89)) (:foreground "#000000" :background "#c397d8"))))
 '(bmkp-file-handler ((((class color) (min-colors 89)) (:background "#d54e53"))))
 '(bmkp-function ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(bmkp-gnus ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(bmkp-heading ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(bmkp-info ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(bmkp-light-autonamed ((((class color) (min-colors 89)) (:foreground "#70c0b1" :background "#2a2a2a"))))
 '(bmkp-light-autonamed-region ((((class color) (min-colors 89)) (:foreground "#d54e53" :background "#2a2a2a"))))
 '(bmkp-light-fringe-autonamed ((((class color) (min-colors 89)) (:foreground "#424242" :background "#c397d8"))))
 '(bmkp-light-fringe-non-autonamed ((((class color) (min-colors 89)) (:foreground "#424242" :background "#b9ca4a"))))
 '(bmkp-light-mark ((((class color) (min-colors 89)) (:foreground "#000000" :background "#70c0b1"))))
 '(bmkp-light-non-autonamed ((((class color) (min-colors 89)) (:foreground "#c397d8" :background "#2a2a2a"))))
 '(bmkp-light-non-autonamed-region ((((class color) (min-colors 89)) (:foreground "#e78c45" :background "#2a2a2a"))))
 '(bmkp-local-directory ((((class color) (min-colors 89)) (:foreground "#000000" :background "#c397d8"))))
 '(bmkp-local-file-with-region ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(bmkp-local-file-without-region ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(bmkp-man ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(bmkp-no-jump ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(bmkp-no-local ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(bmkp-non-file ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(bmkp-remote-file ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(bmkp-sequence ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(bmkp-su-or-sudo ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(bmkp-t-mark ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(bmkp-url ((((class color) (min-colors 89)) (:foreground "#7aa6da" :underline t))))
 '(bmkp-variable-list ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(caml-types-def-face ((((class color) (min-colors 89)) (:inherit highlight :box (:color "#7aa6da" :line-width -1)))))
 '(caml-types-occ-face ((((class color) (min-colors 89)) (:inherit highlight :box (:color "#e7c547" :line-width -1)))))
 '(caml-types-expr-face ((((class color) (min-colors 89)) (:inherit highlight :box (:color "#70c0b1" :line-width -1)))))
 '(caml-types-scope-face ((((class color) (min-colors 89)) (:inherit highlight :box (:color "#b9ca4a" :line-width -1)))))
 '(caml-types-typed-face ((((class color) (min-colors 89)) (:inherit highlight :box (:color "#c397d8" :line-width -1)))))
 '(cider-debug-code-overlay-face ((((class color) (min-colors 89)) (:background "#424242"))))
 '(cider-deprecated-face ((((class color) (min-colors 89)) (:foreground "#424242" :background "#e7c547"))))
 '(cider-enlightened-face ((((class color) (min-colors 89)) (:inherit cider-result-overlay-face :box (:color "#e78c45" :line-width -1)))))
 '(cider-enlightened-local-face ((((class color) (min-colors 89)) (:weight bold :foreground "#e78c45"))))
 '(cider-error-highlight-face ((((class color) (min-colors 89)) (:underline (:style wave :color "#d54e53") :inherit unspecified))))
 '(cider-fringe-good-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(cider-instrumented-face ((((class color) (min-colors 89)) (:box (:color "#d54e53" :line-width -1)))))
 '(cider-result-overlay-face ((((class color) (min-colors 89)) (:background "#424242" :box (:line-width -1 :color "#e7c547")))))
 '(cider-test-error-face ((((class color) (min-colors 89)) (:foreground "#424242" :background "#e78c45"))))
 '(cider-test-failure-face ((((class color) (min-colors 89)) (:foreground "#424242" :background "#d54e53"))))
 '(cider-test-success-face ((((class color) (min-colors 89)) (:foreground "#424242" :background "#b9ca4a"))))
 '(cider-traced-face ((((class color) (min-colors 89)) (:box "#70c0b1" :line-width -1))))
 '(cider-warning-highlight-face ((((class color) (min-colors 89)) (:underline (:style wave :color "#e7c547") :inherit unspecified))))
 '(circe-fool-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(circe-highlight-nick-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(circe-my-message-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(circe-prompt-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(circe-server-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(circe-topic-diff-new-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(circe-topic-diff-removed-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(clojure-keyword ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(clojure-parens ((((class color) (min-colors 89)) (:foreground "#eaeaea"))))
 '(clojure-braces ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(clojure-brackets ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(clojure-double-quote ((((class color) (min-colors 89)) (:foreground "#70c0b1" :background unspecified))))
 '(clojure-special ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(clojure-java-call ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(clojure-test-failure-face ((((class color) (min-colors 89)) (:background unspecified :inherit flymake-warnline))))
 '(clojure-test-error-face ((((class color) (min-colors 89)) (:background unspecified :inherit flymake-errline))))
 '(clojure-test-success-face ((((class color) (min-colors 89)) (:background unspecified :foreground unspecified :underline "#b9ca4a"))))
 '(coffee-mode-class-name ((((class color) (min-colors 89)) (:foreground "#e78c45" :weight bold))))
 '(coffee-mode-function-param ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(company-preview ((((class color) (min-colors 89)) (:foreground "#969896" :background "#424242"))))
 '(company-preview-common ((((class color) (min-colors 89)) (:inherit company-preview :foreground "#d54e53"))))
 '(company-preview-search ((((class color) (min-colors 89)) (:inherit company-preview :foreground "#7aa6da"))))
 '(company-tooltip ((((class color) (min-colors 89)) (:background "#424242"))))
 '(company-tooltip-selection ((((class color) (min-colors 89)) (:foreground "#969896" :inverse-video t))))
 '(company-tooltip-common ((((class color) (min-colors 89)) (:inherit company-tooltip :foreground "#d54e53"))))
 '(company-tooltip-common-selection ((((class color) (min-colors 89)) (:inherit company-tooltip-selection :foreground "#d54e53"))))
 '(company-tooltip-search ((((class color) (min-colors 89)) (:inherit company-tooltip :foreground "#7aa6da"))))
 '(company-tooltip-annotation ((((class color) (min-colors 89)) (:inherit company-tooltip :foreground "#b9ca4a"))))
 '(company-tooltip-annotation-selection ((((class color) (min-colors 89)) (:inherit company-tooltip-selection :foreground "#b9ca4a"))))
 '(company-scrollbar-bg ((((class color) (min-colors 89)) (:inherit 'company-tooltip :background "#2a2a2a"))))
 '(company-scrollbar-fg ((((class color) (min-colors 89)) (:background "#424242"))))
 '(company-echo-common ((((class color) (min-colors 89)) (:inherit company-echo :foreground "#d54e53"))))
 '(counsel-css-selector-depth-face-1 ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(counsel-css-selector-depth-face-2 ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(counsel-css-selector-depth-face-3 ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(counsel-css-selector-depth-face-4 ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(counsel-css-selector-depth-face-5 ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(counsel-css-selector-depth-face-6 ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(csv-separator-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(debbugs-gnu-done ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(debbugs-gnu-forwarded ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(debbugs-gnu-handled ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(debbugs-gnu-new ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(debbugs-gnu-pending ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(debbugs-gnu-stale-1 ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(debbugs-gnu-stale-2 ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(debbugs-gnu-stale-3 ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(debbugs-gnu-stale-4 ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(debbugs-gnu-stale-5 ((((class color) (min-colors 89)) (:foreground "#eaeaea"))))
 '(debbugs-gnu-tagged ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(define-it-headline-face ((((class color) (min-colors 89)) (:foreground "#7aa6da" :bold t))))
 '(define-it-pop-tip-color ((((class color) (min-colors 89)) (:foreground "#969896" :background "#424242"))))
 '(define-it-sense-number-face ((((class color) (min-colors 89)) (:foreground "#c397d8" :bold t))))
 '(define-it-type-face ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(define-it-var-face ((((class color) (min-colors 89)) (:foreground "#e78c45" :bold t))))
 '(diff-hl-insert ((((class color) (min-colors 89)) (:foreground "#000000" :background "#b9ca4a"))))
 '(diff-hl-change ((((class color) (min-colors 89)) (:foreground "#000000" :background "#7aa6da"))))
 '(diff-hl-delete ((((class color) (min-colors 89)) (:foreground "#000000" :background "#d54e53"))))
 '(dired-async-failures ((((class color) (min-colors 89)) (:inherit error))))
 '(dired-async-message ((((class color) (min-colors 89)) (:inherit success))))
 '(dired-async-mode-message ((((class color) (min-colors 89)) (:inherit warning))))
 '(diredfl-compressed-file-suffix ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(diredfl-compressed-file-name ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(diredfl-deletion ((((class color) (min-colors 89)) (:inherit error :inverse-video t))))
 '(diredfl-deletion-file-name ((((class color) (min-colors 89)) (:inherit error))))
 '(diredfl-date-time ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(diredfl-dir-heading ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :weight bold))))
 '(diredfl-dir-name ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(diredfl-dir-priv ((((class color) (min-colors 89)) (:foreground "#70c0b1" :background unspecified))))
 '(diredfl-exec-priv ((((class color) (min-colors 89)) (:foreground "#e78c45" :background unspecified))))
 '(diredfl-executable-tag ((((class color) (min-colors 89)) (:foreground "#d54e53" :background unspecified))))
 '(diredfl-file-name ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(diredfl-file-suffix ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(diredfl-flag-mark ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :inverse-video t))))
 '(diredfl-flag-mark-line ((((class color) (min-colors 89)) (:background unspecified :inherit highlight))))
 '(diredfl-ignored-file-name ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(diredfl-link-priv ((((class color) (min-colors 89)) (:background unspecified :foreground "#c397d8"))))
 '(diredfl-mode-line-flagged ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(diredfl-mode-line-marked ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(diredfl-no-priv ((((class color) (min-colors 89)) (:background unspecified))))
 '(diredfl-number ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(diredfl-other-priv ((((class color) (min-colors 89)) (:background unspecified :foreground "#c397d8"))))
 '(diredfl-rare-priv ((((class color) (min-colors 89)) (:foreground "#d54e53" :background unspecified))))
 '(diredfl-read-priv ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :background unspecified))))
 '(diredfl-symlink ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(diredfl-write-priv ((((class color) (min-colors 89)) (:foreground "#e7c547" :background unspecified))))
 '(diredp-compressed-file-suffix ((((class color) (min-colors 89)) (:inherit diredfl-compressed-file-suffix))))
 '(diredp-compressed-file-name ((((class color) (min-colors 89)) (:inherit diredfl-compressed-file-name))))
 '(diredp-deletion ((((class color) (min-colors 89)) (:inherit diredfl-deletion))))
 '(diredp-deletion-file-name ((((class color) (min-colors 89)) (:inherit diredfl-deletion-file-name))))
 '(diredp-date-time ((((class color) (min-colors 89)) (:inherit diredfl-date-time))))
 '(diredp-dir-heading ((((class color) (min-colors 89)) (:inherit diredfl-dir-heading))))
 '(diredp-dir-name ((((class color) (min-colors 89)) (:inherit diredfl-dir-name))))
 '(diredp-dir-priv ((((class color) (min-colors 89)) (:inherit diredfl-dir-priv))))
 '(diredp-exec-priv ((((class color) (min-colors 89)) (:inherit diredfl-exec-priv))))
 '(diredp-executable-tag ((((class color) (min-colors 89)) (:inherit diredfl-executable-tag))))
 '(diredp-file-name ((((class color) (min-colors 89)) (:inherit diredfl-file-name))))
 '(diredp-file-suffix ((((class color) (min-colors 89)) (:inherit diredfl-file-suffix))))
 '(diredp-flag-mark ((((class color) (min-colors 89)) (:inherit diredfl-flag-mark))))
 '(diredp-flag-mark-line ((((class color) (min-colors 89)) (:inherit diredfl-flag-mark-line))))
 '(diredp-ignored-file-name ((((class color) (min-colors 89)) (:inherit diredfl-ignored-file-name))))
 '(diredp-link-priv ((((class color) (min-colors 89)) (:inherit diredfl-link-priv))))
 '(diredp-mode-line-flagged ((((class color) (min-colors 89)) (:inherit diredfl-mode-line-flagged))))
 '(diredp-mode-line-marked ((((class color) (min-colors 89)) (:inherit diredfl-mode-line-marked))))
 '(diredp-no-priv ((((class color) (min-colors 89)) (:inherit diredfl-no-priv))))
 '(diredp-number ((((class color) (min-colors 89)) (:inherit diredfl-number))))
 '(diredp-other-priv ((((class color) (min-colors 89)) (:inherit diredfl-other-priv))))
 '(diredp-rare-priv ((((class color) (min-colors 89)) (:inherit diredfl-rare-priv))))
 '(diredp-read-priv ((((class color) (min-colors 89)) (:inherit diredfl-read-priv))))
 '(diredp-symlink ((((class color) (min-colors 89)) (:inherit diredfl-symlink))))
 '(diredp-write-priv ((((class color) (min-colors 89)) (:inherit diredfl-write-priv))))
 '(dired-narrow-blink ((((class color) (min-colors 89)) (:foreground "#000000" :background "#e7c547"))))
 '(e2wm:face-history-list-normal ((((class color) (min-colors 89)) (:foreground "#eaeaea" :background "#000000"))))
 '(e2wm:face-history-list-select1 ((((class color) (min-colors 89)) (:foreground "#70c0b1" :background "#000000"))))
 '(e2wm:face-history-list-select2 ((((class color) (min-colors 89)) (:foreground "#e7c547" :background "#000000"))))
 '(edts-face-warning-line ((((class color) (min-colors 89)) (:background unspecified :inherit flymake-warnline))))
 '(edts-face-warning-mode-line ((((class color) (min-colors 89)) (:background unspecified :foreground "#e78c45" :weight bold))))
 '(edts-face-error-line ((((class color) (min-colors 89)) (:background unspecified :inherit flymake-errline))))
 '(edts-face-error-mode-line ((((class color) (min-colors 89)) (:background unspecified :foreground "#d54e53" :weight bold))))
 '(elfeed-log-debug-level-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(elfeed-log-error-level-face ((((class color) (min-colors 89)) (:inherit error))))
 '(elfeed-log-info-level-face ((((class color) (min-colors 89)) (:inherit success))))
 '(elfeed-log-warn-level-face ((((class color) (min-colors 89)) (:inherit warning))))
 '(elfeed-search-date-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(elfeed-search-feed-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(elfeed-search-tag-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(elfeed-search-title-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(elfeed-search-unread-count-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(elfeed-search-unread-title-face ((((class color) (min-colors 89)) (:foreground "#eaeaea" :weight bold))))
 '(emms-browser-artist-face ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(emms-browser-album-face ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(emms-browser-track-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(emms-browser-year/genre-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(emms-playlist-selected-face ((((class color) (min-colors 89)) (:inverse-video t))))
 '(emms-playlist-track-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(eyebrowse-mode-line-active ((((class color) (min-colors 89)) (:foreground "#e78c45" :weight bold))))
 '(eyebrowse-mode-line-delimiters ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(eyebrowse-mode-line-inactive ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(eyebrowse-mode-line-separator ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(flx-highlight-face ((((class color) (min-colors 89)) (:inherit nil :foreground "#e7c547" :weight bold :underline nil))))
 '(fold-this-overlay ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(git-gutter:separator ((((class color) (min-colors 89)) (:foreground "#70c0b1" :weight bold))))
 '(git-gutter:modified ((((class color) (min-colors 89)) (:foreground "#c397d8" :weight bold))))
 '(git-gutter:added ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :weight bold))))
 '(git-gutter:deleted ((((class color) (min-colors 89)) (:foreground "#d54e53" :weight bold))))
 '(git-gutter:unchanged ((((class color) (min-colors 89)) (:background "#e7c547"))))
 '(git-gutter+-separator ((((class color) (min-colors 89)) (:foreground "#70c0b1" :weight bold))))
 '(git-gutter+-modified ((((class color) (min-colors 89)) (:foreground "#c397d8" :weight bold))))
 '(git-gutter+-added ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :weight bold))))
 '(git-gutter+-deleted ((((class color) (min-colors 89)) (:foreground "#d54e53" :weight bold))))
 '(git-gutter+-unchanged ((((class color) (min-colors 89)) (:background "#e7c547"))))
 '(git-timemachine-minibuffer-author-face ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(git-timemachine-minibuffer-detail-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(guide-key/prefix-command-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(guide-key/highlight-command-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(guide-key/key-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(helm-M-x-key ((((class color) (min-colors 89)) (:foreground "#e78c45" :underline t))))
 '(helm-bookmark-addressbook ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(helm-bookmark-file ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(helm-bookmark-file-not-found ((((class color) (min-colors 89)) (:foreground "#000000"))))
 '(helm-bookmark-gnus ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(helm-bookmark-info ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(helm-bookmark-man ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(helm-bookmark-w3m ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(helm-buffer-archive ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(helm-buffer-directory ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(helm-buffer-not-saved ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(helm-buffer-process ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(helm-buffer-saved-out ((((class color) (min-colors 89)) (:inherit warning))))
 '(helm-buffer-size ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(helm-candidate-number ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(helm-comint-prompts-buffer-name ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(helm-comint-prompts-promptidx ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(helm-delete-async-message ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(helm-eshell-prompts-buffer-name ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(helm-eshell-prompts-promptidx ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(helm-etags-file ((((class color) (min-colors 89)) (:foreground "#e7c547" :underline t))))
 '(helm-ff-denied ((((class color) (min-colors 89)) (:foreground "#000000" :background "#d54e53"))))
 '(helm-ff-directory ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(helm-ff-dotted-directory ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(helm-ff-dotted-symlink-directory ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(helm-ff-executable ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(helm-ff-invalid-symlink ((((class color) (min-colors 89)) (:foreground "#000000" :background "#d54e53"))))
 '(helm-ff-pipe ((((class color) (min-colors 89)) (:foreground "#e7c547" :background "#000000"))))
 '(helm-ff-prefix ((((class color) (min-colors 89)) (:foreground "#000000" :background "#e7c547"))))
 '(helm-ff-socket ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(helm-ff-suid ((((class color) (min-colors 89)) (:foreground "#000000" :background "#d54e53"))))
 '(helm-grep-file ((((class color) (min-colors 89)) (:foreground "#c397d8" :underline t))))
 '(helm-grep-finish ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(helm-grep-lineno ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(helm-grep-match ((((class color) (min-colors 89)) (:inherit match))))
 '(helm-header-line-left-margin ((((class color) (min-colors 89)) (:foreground "#000000" :background "#e7c547"))))
 '(helm-lisp-completion-info ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(helm-lisp-show-completion ((((class color) (min-colors 89)) (:background "#424242"))))
 '(helm-locate-finish ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(helm-match ((((class color) (min-colors 89)) (:inherit match))))
 '(helm-moccur-buffer ((((class color) (min-colors 89)) (:foreground "#70c0b1" :underline t))))
 '(helm-mode-prefix ((((class color) (min-colors 89)) (:foreground "#000000" :background "#d54e53"))))
 '(helm-prefarg ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(helm-resume-need-update ((((class color) (min-colors 89)) (:background "#d54e53"))))
 '(helm-selection ((((class color) (min-colors 89)) (:inherit highlight :extend t))))
 '(helm-selection-line ((((class color) (min-colors 89)) (:inherit highlight :extend t))))
 '(helm-separator ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(helm-source-header ((((class color) (min-colors 89)) (:weight bold :foreground "#e78c45"))))
 '(helm-time-zone-current ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(helm-time-zone-home ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(helm-ucs-char ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(helm-visible-mark ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(helm-ls-git-added-copied-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(helm-ls-git-added-modified-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(helm-ls-git-conflict-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(helm-ls-git-deleted-and-staged-face ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(helm-ls-git-deleted-not-staged-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(helm-ls-git-modified-and-staged-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(helm-ls-git-modified-not-staged-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(helm-ls-git-renamed-modified-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(helm-ls-git-untracked-face ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(helm-rg-active-arg-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(helm-rg-base-rg-cmd-face ((((class color) (min-colors 89)) (:foreground "#eaeaea"))))
 '(helm-rg-colon-separator-ripgrep-output-face ((((class color) (min-colors 89)) (:foreground "#eaeaea"))))
 '(helm-rg-directory-cmd-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(helm-rg-directory-header-face ((((class color) (min-colors 89)) (:foreground "#eaeaea" :extend t))))
 '(helm-rg-error-message ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(helm-rg-extra-arg-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(helm-rg-file-match-face ((((class color) (min-colors 89)) (:foreground "#70c0b1" :underline t))))
 '(helm-rg-inactive-arg-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(helm-rg-line-number-match-face ((((class color) (min-colors 89)) (:foreground "#e78c45" :underline t))))
 '(helm-rg-match-text-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#7aa6da"))))
 '(helm-rg-preview-line-highlight ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(helm-rg-title-face ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(helm-switch-shell-new-shell-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#c397d8"))))
 '(hl-sexp-face ((((class color) (min-colors 89)) (:background "#424242"))))
 '(highlight-80+ ((((class color) (min-colors 89)) (:background "#424242"))))
 '(highlight-symbol-face ((((class color) (min-colors 89)) (:inherit highlight))))
 '(hydra-face-blue ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(hydra-face-teal ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(hydra-face-pink ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(hydra-face-red ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(hydra-face-amaranth ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(info-command-ref-item ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :background "#2a2a2a"))))
 '(info-constant-ref-item ((((class color) (min-colors 89)) (:foreground "#c397d8" :background "#2a2a2a"))))
 '(info-double-quoted-name ((((class color) (min-colors 89)) (:inherit font-lock-comment-face))))
 '(info-file ((((class color) (min-colors 89)) (:foreground "#e7c547" :background "#2a2a2a"))))
 '(info-function-ref-item ((((class color) (min-colors 89)) (:inherit font-lock-function-name-face :background "#2a2a2a"))))
 '(info-macro-ref-item ((((class color) (min-colors 89)) (:foreground "#e78c45" :background "#2a2a2a"))))
 '(info-menu ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(info-quoted-name ((((class color) (min-colors 89)) (:inherit font-lock-constant-face))))
 '(info-reference-item ((((class color) (min-colors 89)) (:background "#2a2a2a"))))
 '(info-single-quote ((((class color) (min-colors 89)) (:inherit font-lock-keyword-face))))
 '(info-special-form-ref-item ((((class color) (min-colors 89)) (:foreground "#e78c45" :background "#2a2a2a"))))
 '(info-string ((((class color) (min-colors 89)) (:inherit font-lock-string-face))))
 '(info-syntax-class-item ((((class color) (min-colors 89)) (:foreground "#7aa6da" :background "#2a2a2a"))))
 '(info-user-option-ref-item ((((class color) (min-colors 89)) (:foreground "#d54e53" :background "#2a2a2a"))))
 '(info-variable-ref-item ((((class color) (min-colors 89)) (:inherit font-lock-variable-name-face :background "#2a2a2a"))))
 '(info-xref-bookmarked ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(ivy-action ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(ivy-confirm-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(ivy-current-match ((((class color) (min-colors 89)) (:background "#424242"))))
 '(ivy-cursor ((((class color) (min-colors 89)) (:background "#424242"))))
 '(ivy-match-required-face ((((class color) (min-colors 89)) (:foreground "#d54e53" :background "#000000"))))
 '(ivy-remote ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(ivy-subdir ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(ivy-virtual ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(ivy-minibuffer-match-face-1 ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(ivy-minibuffer-match-face-2 ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(ivy-minibuffer-match-face-3 ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(ivy-minibuffer-match-face-4 ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(jabber-chat-prompt-local ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(jabber-chat-prompt-foreign ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(jabber-chat-prompt-system ((((class color) (min-colors 89)) (:foreground "#e7c547" :weight bold))))
 '(jabber-chat-text-local ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(jabber-chat-text-foreign ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(jabber-chat-text-error ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(jabber-roster-user-online ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(jabber-roster-user-xa ((((class color) (min-colors 89)) :foreground "#969896")))
 '(jabber-roster-user-dnd ((((class color) (min-colors 89)) :foreground "#e7c547")))
 '(jabber-roster-user-away ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(jabber-roster-user-chatty ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(jabber-roster-user-error ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(jabber-roster-user-offline ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(jabber-rare-time-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(jabber-activity-face ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(jabber-activity-personal-face ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(cperl-array-face ((((class color) (min-colors 89)) (:foreground "#7aa6da" :weight bold))))
 '(cperl-hash-face ((((class color) (min-colors 89)) (:foreground "#d54e53" :slant italic))))
 '(cperl-nonoverridable-face ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(js2-warning ((((class color) (min-colors 89)) (:underline "#e78c45"))))
 '(js2-error ((((class color) (min-colors 89)) (:foreground unspecified :underline "#d54e53"))))
 '(js2-external-variable ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(js2-function-param ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(js2-instance-member ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(js2-private-function-call ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(js2-jsdoc-tag ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(js2-jsdoc-type ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(js2-jsdoc-value ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(js2-function-call ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(js2-object-property ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(js2-private-member ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(js2-jsdoc-html-tag-name ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(js2-jsdoc-html-tag-delimiter ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(js3-warning-face ((((class color) (min-colors 89)) (:underline "#e78c45"))))
 '(js3-error-face ((((class color) (min-colors 89)) (:foreground unspecified :underline "#d54e53"))))
 '(js3-external-variable-face ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(js3-function-param-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(js3-jsdoc-tag-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(js3-jsdoc-type-face ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(js3-jsdoc-value-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(js3-jsdoc-html-tag-name-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(js3-jsdoc-html-tag-delimiter-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(js3-instance-member-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(js3-private-function-call-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(ledger-font-comment-face ((((class color) (min-colors 89)) (:inherit font-lock-comment-face))))
 '(ledger-font-occur-narrowed-face ((((class color) (min-colors 89)) (:inherit font-lock-comment-face :invisible t))))
 '(ledger-font-occur-xact-face ((((class color) (min-colors 89)) (:inherit highlight))))
 '(ledger-font-payee-cleared-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(ledger-font-payee-uncleared-face ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(ledger-font-posting-date-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(ledger-font-posting-amount-face ((((class color) (min-colors 89)) (:foreground "#eaeaea"))))
 '(ledger-font-posting-account-cleared-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(ledger-font-posting-account-face ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(ledger-font-posting-account-pending-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(ledger-font-xact-highlight-face ((((class color) (min-colors 89)) (:inherit highlight))))
 '(ledger-occur-narrowed-face ((((class color) (min-colors 89)) (:inherit font-lock-comment-face :invisible t))))
 '(ledger-occur-xact-face ((((class color) (min-colors 89)) (:inherit highlight))))
 '(lispy-command-name-face ((((class color) (min-colors 89)) (:inherit font-lock-function-name-face :background "#2a2a2a"))))
 '(lispy-cursor-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#eaeaea"))))
 '(lispy-face-hint ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :background "#424242"))))
 '(macrostep-expansion-highlight-face ((((class color) (min-colors 89)) (:inherit highlight :foreground unspecified))))
 '(magit-bisect-bad ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(magit-bisect-good ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(magit-bisect-skip ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(magit-blame-date ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(magit-blame-heading ((((class color) (min-colors 89)) (:foreground "#e78c45" :background "#2a2a2a" :extend t))))
 '(magit-branch-current ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(magit-branch-local ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(magit-branch-remote ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(magit-cherry-equivalent ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(magit-cherry-unmatched ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(magit-diff-added ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :extend t))))
 '(magit-diff-added-highlight ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :background "#2a2a2a" :extend t))))
 '(magit-diff-base ((((class color) (min-colors 89)) (:foreground "#000000" :background "#e78c45" :extend t))))
 '(magit-diff-base-highlight ((((class color) (min-colors 89)) (:foreground "#e78c45" :background "#2a2a2a" :extend t))))
 '(magit-diff-context ((((class color) (min-colors 89)) (:foreground "#969896" :extend t))))
 '(magit-diff-context-highlight ((((class color) (min-colors 89)) (:foreground "#969896" :background "#2a2a2a" :extend t))))
 '(magit-diff-file-heading ((((class color) (min-colors 89)) (:foreground "#eaeaea" :extend t))))
 '(magit-diff-file-heading-highlight ((((class color) (min-colors 89)) (:background "#424242" :weight bold :extend t))))
 '(magit-diff-file-heading-selection ((((class color) (min-colors 89)) (:foreground "#e78c45" :background "#2a2a2a" :extend t))))
 '(magit-diff-hunk-heading ((((class color) (min-colors 89)) (:foreground "#eaeaea" :background "#424242" :extend t))))
 '(magit-diff-hunk-heading-highlight ((((class color) (min-colors 89)) (:background "#424242" :extend t))))
 '(magit-diff-lines-heading ((((class color) (min-colors 89)) (:foreground "#e7c547" :background "#d54e53" :extend t))))
 '(magit-diff-removed ((((class color) (min-colors 89)) (:foreground "#e78c45" :extend t))))
 '(magit-diff-removed-highlight ((((class color) (min-colors 89)) (:foreground "#e78c45" :background "#2a2a2a" :extend t))))
 '(magit-diffstat-added ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(magit-diffstat-removed ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(magit-dimmed ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(magit-filename ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(magit-hash ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(magit-header-line ((((class color) (min-colors 89)) (:inherit nil :weight bold))))
 '(magit-log-author ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(magit-log-date ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(magit-log-graph ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(magit-mode-line-process ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(magit-mode-line-process-error ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(magit-process-ng ((((class color) (min-colors 89)) (:inherit error))))
 '(magit-process-ok ((((class color) (min-colors 89)) (:inherit success))))
 '(magit-reflog-amend ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(magit-reflog-checkout ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(magit-reflog-cherry-pick ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(magit-reflog-commit ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(magit-reflog-merge ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(magit-reflog-other ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(magit-reflog-rebase ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(magit-reflog-remote ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(magit-reflog-reset ((((class color) (min-colors 89)) (:inherit error))))
 '(magit-refname ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(magit-section-heading ((((class color) (min-colors 89)) (:foreground "#e7c547" :weight bold :extend t))))
 '(magit-section-heading-selection ((((class color) (min-colors 89)) (:foreground "#e78c45" :weight bold :extend t))))
 '(magit-section-highlight ((((class color) (min-colors 89)) (:background "#2a2a2a" :weight bold :extend t))))
 '(magit-sequence-drop ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(magit-sequence-head ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(magit-sequence-part ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(magit-sequence-stop ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(magit-signature-bad ((((class color) (min-colors 89)) (:inherit error))))
 '(magit-signature-error ((((class color) (min-colors 89)) (:inherit error))))
 '(magit-signature-expired ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(magit-signature-good ((((class color) (min-colors 89)) (:inherit success))))
 '(magit-signature-revoked ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(magit-signature-untrusted ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(magit-tag ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(mm/master-face ((((class color) (min-colors 89)) (:inherit region :foreground unspecified :background unspecified))))
 '(mm/mirror-face ((((class color) (min-colors 89)) (:inherit region :foreground unspecified :background unspecified))))
 '(markdown-url-face ((((class color) (min-colors 89)) (:inherit link))))
 '(markdown-link-face ((((class color) (min-colors 89)) (:foreground "#7aa6da" :underline t))))
 '(markdown-code-face ((((class color) (min-colors 89)) (:inherit fixed-pitch :background "#000000" :foreground "#c397d8"))))
 '(markdown-inline-code-face ((((class color) (min-colors 89)) (:inherit markdown-code-face))))
 '(markup-code-face ((((class color) (min-colors 89)) (:inherit fixed-pitch :background "#000000" :foreground "#c397d8"))))
 '(markup-complex-replacement-face ((((class color) (min-colors 89)) (:background "#000000"))))
 '(markup-error-face ((((class color) (min-colors 89)) (:foreground "#d54e53" :background "#000000" :weight bold))))
 '(markup-gen-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(markup-list-face ((((class color) (min-colors 89)) (:foreground unspecified :background unspecified))))
 '(markup-meta-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(markup-meta-hide-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(markup-reference-face ((((class color) (min-colors 89)) (:inherit link))))
 '(markup-secondary-text-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(markup-title-0-face ((((class color) (min-colors 89)) (:foreground "#7aa6da" :weight bold :height 1.4))))
 '(markup-title-1-face ((((class color) (min-colors 89)) (:foreground "#c397d8" :weight bold :height 1.2))))
 '(markup-title-2-face ((((class color) (min-colors 89)) (:foreground "#e78c45" :weight bold))))
 '(markup-title-3-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :weight bold))))
 '(markup-title-4-face ((((class color) (min-colors 89)) (:foreground "#7aa6da" :weight bold))))
 '(markup-title-5-face ((((class color) (min-colors 89)) (:foreground "#c397d8" :weight bold))))
 '(markup-typewriter-face ((((class color) (min-colors 89)) (:inherit shadow))))
 '(markup-verbatim-face ((((class color) (min-colors 89)) (:inherit shadow :background "#000000"))))
 '(merlin-compilation-error-face ((((class color) (min-colors 89)) (:inherit flycheck-error))))
 '(merlin-compilation-warning-face ((((class color) (min-colors 89)) (:inherit flycheck-warning))))
 '(mu4e-header-highlight-face ((((class color) (min-colors 89)) (:underline nil :inherit region))))
 '(mu4e-header-marks-face ((((class color) (min-colors 89)) (:underline nil :foreground "#e7c547"))))
 '(mu4e-flagged-face ((((class color) (min-colors 89)) (:foreground "#e78c45" :inherit nil))))
 '(mu4e-replied-face ((((class color) (min-colors 89)) (:foreground "#7aa6da" :inherit nil))))
 '(mu4e-unread-face ((((class color) (min-colors 89)) (:foreground "#e7c547" :inherit nil))))
 '(mu4e-cited-1-face ((((class color) (min-colors 89)) (:foreground "#7aa6da" :slant normal))))
 '(mu4e-cited-2-face ((((class color) (min-colors 89)) (:foreground "#c397d8" :slant normal))))
 '(mu4e-cited-3-face ((((class color) (min-colors 89)) (:foreground "#70c0b1" :slant normal))))
 '(mu4e-cited-4-face ((((class color) (min-colors 89)) (:foreground "#e7c547" :slant normal))))
 '(mu4e-cited-5-face ((((class color) (min-colors 89)) (:foreground "#e78c45" :slant normal))))
 '(mu4e-cited-6-face ((((class color) (min-colors 89)) (:foreground "#7aa6da" :slant normal))))
 '(mu4e-cited-7-face ((((class color) (min-colors 89)) (:foreground "#c397d8" :slant normal))))
 '(mu4e-ok-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(mu4e-view-contact-face ((((class color) (min-colors 89)) (:inherit nil :foreground "#e7c547"))))
 '(mu4e-view-link-face ((((class color) (min-colors 89)) (:inherit link :foreground "#7aa6da"))))
 '(mu4e-view-url-number-face ((((class color) (min-colors 89)) (:inherit nil :foreground "#70c0b1"))))
 '(mu4e-view-attach-number-face ((((class color) (min-colors 89)) (:inherit nil :foreground "#e78c45"))))
 '(mu4e-highlight-face ((((class color) (min-colors 89)) (:inherit highlight))))
 '(mu4e-title-face ((((class color) (min-colors 89)) (:inherit nil :foreground "#b9ca4a"))))
 '(mmm-code-submode-face ((((class color) (min-colors 89)) (:background "#424242"))))
 '(mmm-comment-submode-face ((((class color) (min-colors 89)) (:inherit font-lock-comment-face))))
 '(mmm-output-submode-face ((((class color) (min-colors 89)) (:background "#424242"))))
 '(mini-modeline-mode-line ((((class color) (min-colors 89)) (:inherit mode-line :height 0.1 :box nil))))
 '(neo-banner-face ((((class color) (min-colors 89)) (:foreground "#7aa6da" :weight bold))))
 '(neo-button-face ((((class color) (min-colors 89)) (:underline t))))
 '(neo-dir-link-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(neo-expand-btn-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(neo-file-link-face ((((class color) (min-colors 89)) (:foreground "#eaeaea"))))
 '(neo-header-face ((((class color) (min-colors 89)) (:foreground "#eaeaea" :background "#2a2a2a"))))
 '(neo-root-dir-face ((((class color) (min-colors 89)) (:foreground "#7aa6da" :weight bold))))
 '(neo-vc-added-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(neo-vc-conflict-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(neo-vc-default-face ((((class color) (min-colors 89)) (:foreground "#eaeaea"))))
 '(neo-vc-edited-face ((((class color) (min-colors 89)) (:foreground "#c397d8"))))
 '(neo-vc-ignored-face ((((class color) (min-colors 89)) (:foreground "#424242"))))
 '(neo-vc-missing-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(neo-vc-needs-merge-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(neo-vc-unlocked-changes-face ((((class color) (min-colors 89)) (:foreground "#7aa6da" :slant italic))))
 '(neo-vc-user-face ((((class color) (min-colors 89)) (:foreground "#d54e53" :slant italic))))
 '(nswbuff-current-buffer-face ((((class color) (min-colors 89)) (:foreground "#7aa6da" :weight bold :underline nil))))
 '(nswbuff-default-face ((((class color) (min-colors 89)) (:foreground "#eaeaea" :background "#000000"))))
 '(nswbuff-separator-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(nswbuff-special-buffers-face ((((class color) (min-colors 89)) (:foreground "#c397d8" :bold nil :underline nil))))
 '(paren-face-match ((((class color) (min-colors 89)) (:foreground unspecified :background unspecified :inherit show-paren-match))))
 '(paren-face-mismatch ((((class color) (min-colors 89)) (:foreground unspecified :background unspecified :inherit show-paren-mismatch))))
 '(paren-face-no-match ((((class color) (min-colors 89)) (:foreground unspecified :background unspecified :inherit show-paren-mismatch))))
 '(paren-face ((((class color) (min-colors 89)) (:foreground "#969896" :background unspecified))))
 '(persp-selected-face ((((class color) (min-colors 89)) (:foreground "#e7c547" :weight bold))))
 '(powerline-active1 ((((class color) (min-colors 89)) (:foreground "#eaeaea" :background "#2a2a2a"))))
 '(powerline-active2 ((((class color) (min-colors 89)) (:foreground "#eaeaea" :background "#424242"))))
 '(powerline-evil-base-face ((((class color) (min-colors 89)) (:inherit mode-line :foreground "#000000"))))
 '(powerline-evil-emacs-face ((((class color) (min-colors 89)) (:inherit powerline-evil-base-face :background "#c397d8"))))
 '(powerline-evil-insert-face ((((class color) (min-colors 89)) (:inherit powerline-evil-base-face :background "#7aa6da"))))
 '(powerline-evil-motion-face ((((class color) (min-colors 89)) (:inherit powerline-evil-base-face :background "#e78c45"))))
 '(powerline-evil-normal-face ((((class color) (min-colors 89)) (:inherit powerline-evil-base-face :background "#b9ca4a"))))
 '(powerline-evil-operator-face ((((class color) (min-colors 89)) (:inherit powerline-evil-base-face :background "#70c0b1"))))
 '(powerline-evil-replace-face ((((class color) (min-colors 89)) (:inherit powerline-evil-base-face :background "#d54e53"))))
 '(powerline-evil-visual-face ((((class color) (min-colors 89)) (:inherit powerline-evil-base-face :background "#e7c547"))))
 '(pulse-highlight-start-face ((((class color) (min-colors 89)) (:background "#d54e53"))))
 '(py-builtins-face ((((class color) (min-colors 89)) (:foreground "#e78c45" :weight normal))))
 '(rainbow-delimiters-depth-1-face ((((class color) (min-colors 89)) (:foreground "#eaeaea"))))
 '(rainbow-delimiters-depth-2-face ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(rainbow-delimiters-depth-3-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(rainbow-delimiters-depth-4-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(rainbow-delimiters-depth-5-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(rainbow-delimiters-depth-6-face ((((class color) (min-colors 89)) (:foreground "#eaeaea"))))
 '(rainbow-delimiters-depth-7-face ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(rainbow-delimiters-depth-8-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(rainbow-delimiters-depth-9-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(rainbow-delimiters-unmatched-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(regex-tool-matched-face ((((class color) (min-colors 89)) (:foreground unspecified :background unspecified :inherit match))))
 '(erb-delim-face ((((class color) (min-colors 89)) (:background "#424242"))))
 '(erb-exec-face ((((class color) (min-colors 89)) (:background "#424242" :weight bold))))
 '(erb-exec-delim-face ((((class color) (min-colors 89)) (:background "#424242"))))
 '(erb-out-face ((((class color) (min-colors 89)) (:background "#424242" :weight bold))))
 '(erb-out-delim-face ((((class color) (min-colors 89)) (:background "#424242"))))
 '(erb-comment-face ((((class color) (min-colors 89)) (:background "#424242" :weight bold :slant italic))))
 '(erb-comment-delim-face ((((class color) (min-colors 89)) (:background "#424242"))))
 '(rpm-spec-dir-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(rpm-spec-doc-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(rpm-spec-ghost-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(rpm-spec-macro-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(rpm-spec-obsolete-tag-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(rpm-spec-package-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(rpm-spec-section-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(rpm-spec-tag-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(rpm-spec-var-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(selectrum-current-candidate ((((class color) (min-colors 89)) (:background "#424242"))))
 '(selectrum-primary-highlight ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(selectrum-secondary-highlight ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(selectrum-completion-docsig ((((class color) (min-colors 89)) (:inherit completions-annotation :underline t))))
 '(slime-highlight-edits-face ((((class color) (min-colors 89)) (:weight bold))))
 '(slime-repl-input-face ((((class color) (min-colors 89)) (:weight normal :underline nil))))
 '(slime-repl-prompt-face ((((class color) (min-colors 89)) (:underline nil :weight bold :foreground "#c397d8"))))
 '(slime-repl-result-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(slime-repl-output-face ((((class color) (min-colors 89)) (:foreground "#7aa6da" :background "#000000"))))
 '(slime-repl-inputed-output-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(sly-error-face ((((class color) (min-colors 89)) (:underline (:style wave :color "#d54e53")))))
 '(sly-mrepl-output-face ((((class color) (min-colors 89)) (:foreground "#c397d8" :background "#000000"))))
 '(sly-note-face ((((class color) (min-colors 89)) (:underline (:style wave :color "#b9ca4a")))))
 '(sly-style-warning-face ((((class color) (min-colors 89)) (:underline (:style wave :color "#e7c547")))))
 '(sly-warning-face ((((class color) (min-colors 89)) (:underline (:style wave :color "#e78c45")))))
 '(sly-stickers-armed-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#7aa6da"))))
 '(sly-stickers-empty-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#969896"))))
 '(sly-stickers-placed-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#eaeaea"))))
 '(sly-stickers-recordings-face ((((class color) (min-colors 89)) (:foreground "#000000" :background "#b9ca4a"))))
 '(sp-show-pair-match-face ((((class color) (min-colors 89)) (:foreground unspecified :background unspecified :inherit show-paren-match))))
 '(sp-show-pair-mismatch-face ((((class color) (min-colors 89)) (:foreground unspecified :background unspecified :inherit show-paren-mismatch))))
 '(stripe-highlight ((((class color) (min-colors 89)) (:inherit highlight))))
 '(swiper-line-face ((((class color) (min-colors 89)) (:underline t))))
 '(sx-question-mode-content-face ((((class color) (min-colors 89)) (:background "#2a2a2a"))))
 '(sx-question-list-answers ((((class color) (min-colors 89)) (:inherit sx-question-list-parent :foreground "#b9ca4a"))))
 '(sx-question-mode-accepted ((((class color) (min-colors 89)) (:inherit sx-question-mode-title :foreground "#b9ca4a"))))
 '(sx-question-mode-kbd-tag ((((class color) (min-colors 89)) (:weight semi-bold :box (:line-width 3 :style released-button :color "#424242")))))
 '(symbol-overlay-default-face ((((class color) (min-colors 89)) (:inherit highlight :underline t))))
 '(syslog-debug ((((class color) (min-colors 89)) (:weight bold :foreground "#b9ca4a"))))
 '(syslog-error ((((class color) (min-colors 89)) (:weight bold :foreground "#d54e53"))))
 '(syslog-hide ((((class color) (min-colors 89)) (:foregound "#969896"))))
 '(syslog-info ((((class color) (min-colors 89)) (:weight bold :foreground "#7aa6da"))))
 '(syslog-su ((((class color) (min-colors 89)) (:weight bold :foreground "#c397d8"))))
 '(syslog-warn ((((class color) (min-colors 89)) (:weight bold :foreground "#e78c45"))))
 '(transient-enabled-suffix ((((class color) (min-colors 89)) (:foreground "#151515151515" :background "#b9ca4a" :weight bold))))
 '(transient-disabled-suffix ((((class color) (min-colors 89)) (:foreground "#eaeaea" :background "#d54e53" :weight bold))))
 '(tuareg-font-lock-constructor-face ((((class color) (min-colors 89)) (:inherit default :weight bold))))
 '(tuareg-font-lock-governing-face ((((class color) (min-colors 89)) (:inherit font-lock-keyword-face :weight bold))))
 '(tuareg-font-lock-multistage-face ((((class color) (min-colors 89)) (:inherit font-lock-preprocessor-face))))
 '(tuareg-font-lock-line-number-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(tuareg-font-lock-operator-face ((((class color) (min-colors 89)) (:inherit font-lock-preprocessor-face))))
 '(tuareg-font-lock-interactive-error-face ((((class color) (min-colors 89)) (:inherit error))))
 '(tuareg-font-double-semicolon-face ((((class color) (min-colors 89)) (:inherit warning :slant italic))))
 '(tuareg-font-lock-error-face ((((class color) (min-colors 89)) (:inherit error :slant italic))))
 '(tuareg-font-lock-interactive-output-face ((((class color) (min-colors 89)))))
 '(tuareg-font-lock-interactive-directive-face ((((class color) (min-colors 89)))))
 '(twittering-username-face ((((class color) (min-colors 89)) (:inherit erc-pal-face))))
 '(twittering-uri-face ((((class color) (min-colors 89)) (:foreground "#7aa6da" :inherit link))))
 '(twittering-timeline-header-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :weight bold))))
 '(twittering-timeline-footer-face ((((class color) (min-colors 89)) (:inherit twittering-timeline-header-face))))
 '(undo-tree-visualizer-default-face ((((class color) (min-colors 89)) (:foreground "#eaeaea"))))
 '(undo-tree-visualizer-current-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :weight bold))))
 '(undo-tree-visualizer-active-branch-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(undo-tree-visualizer-register-face ((((class color) (min-colors 89)) (:foreground "#e7c547"))))
 '(vertico-current ((((class color) (min-colors 89)) (:background "#424242" :extend t))))
 '(vr/match-0 ((((class color) (min-colors 89)) (:foreground "#e7c547" :background "#000000" :inverse-video t))))
 '(vr/match-1 ((((class color) (min-colors 89)) (:foreground "#70c0b1" :background "#000000" :inverse-video t))))
 '(vr/group-0 ((((class color) (min-colors 89)) (:foreground "#c397d8" :background "#000000" :inverse-video t))))
 '(vr/group-1 ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :background "#000000" :inverse-video t))))
 '(vr/group-2 ((((class color) (min-colors 89)) (:foreground "#e78c45" :background "#000000" :inverse-video t))))
 '(vterm-color-black ((((class color) (min-colors 89)) (:background "#424242" :foreground "#424242"))))
 '(vterm-color-blue ((((class color) (min-colors 89)) (:background "#7aa6da" :foreground "#7aa6da"))))
 '(vterm-color-cyan ((((class color) (min-colors 89)) (:background "#70c0b1" :foreground "#70c0b1"))))
 '(vterm-color-default ((((class color) (min-colors 89)) (:foreground unspecified :background unspecified :inherit default))))
 '(vterm-color-green ((((class color) (min-colors 89)) (:background "#b9ca4a" :foreground "#b9ca4a"))))
 '(vterm-color-magenta ((((class color) (min-colors 89)) (:background "#c397d8" :foreground "#c397d8"))))
 '(vterm-color-red ((((class color) (min-colors 89)) (:background "#d54e53" :foreground "#d54e53"))))
 '(vterm-color-white ((((class color) (min-colors 89)) (:background "#969896" :foreground "#969896"))))
 '(vterm-color-yellow ((((class color) (min-colors 89)) (:background "#e7c547" :foreground "#e7c547"))))
 '(vterm-color-underline ((((class color) (min-colors 89)) (:underline t))))
 '(vterm-color-inverse-video ((((class color) (min-colors 89)) (:background "#000000" :inverse-video t))))
 '(web-mode-doctype-face ((((class color) (min-colors 89)) (:inherit font-lock-string-face))))
 '(web-mode-html-attr-equal-face ((((class color) (min-colors 89)) (:foreground unspecified :background unspecified :inherit default))))
 '(web-mode-html-attr-name-face ((((class color) (min-colors 89)) (:inherit font-lock-variable-name-face))))
 '(web-mode-html-tag-face ((((class color) (min-colors 89)) (:inherit font-lock-function-name-face))))
 '(web-mode-html-tag-bracket-face ((((class color) (min-colors 89)) (:inherit font-lock-function-name-face))))
 '(web-mode-symbol-face ((((class color) (min-colors 89)) (:inherit font-lock-constant-face))))
 '(weechat-highlight-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(weechat-nick-self-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(weechat-time-face ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(wgrep-delete-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(wgrep-done-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(wgrep-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a" :background "#424242"))))
 '(wgrep-file-face ((((class color) (min-colors 89)) (:foreground "#969896" :background "#424242"))))
 '(wgrep-reject-face ((((class color) (min-colors 89)) (:foreground "#e78c45" :weight bold))))
 '(cscope-file-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(cscope-function-face ((((class color) (min-colors 89)) (:foreground "#7aa6da"))))
 '(cscope-line-number-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(cscope-separator-face ((((class color) (min-colors 89)) (:bold t :overline t :underline t :foreground "#c397d8"))))
 '(ztreep-arrow-face ((((class color) (min-colors 89)) (:foreground "#2a2a2a"))))
 '(ztreep-diff-header-face ((((class color) (min-colors 89)) (:foreground "#e7c547" :weight bold))))
 '(ztreep-diff-header-small-face ((((class color) (min-colors 89)) (:foregorund "#e7c547"))))
 '(ztreep-diff-model-add-face ((((class color) (min-colors 89)) (:foreground "#b9ca4a"))))
 '(ztreep-diff-model-diff-face ((((class color) (min-colors 89)) (:foreground "#d54e53"))))
 '(ztreep-diff-model-ignored-face ((((class color) (min-colors 89)) (:foreground "#e78c45"))))
 '(ztreep-diff-model-normal-face ((((class color) (min-colors 89)) (:foreground "#eaeaea"))))
 '(ztreep-expand-sign-face ((((class color) (min-colors 89)) (:foreground "#eaeaea"))))
 '(ztreep-header-face ((((class color) (min-colors 89)) (:forground "#e7c547" :weight bold))))
 '(ztreep-leaf-face ((((class color) (min-colors 89)) (:foreground "#70c0b1"))))
 '(ztreep-node-face ((((class color) (min-colors 89)) (:foreground "#eaeaea"))))
 '(default ((((class color) (min-colors 89)) (:foreground "#eaeaea" :background "#000000")))))

(provide-theme 'sanityinc-tomorrow-bright)
